# -*- coding: utf-8 -*-
"""tft ai test

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1hh8SBsJ_KpRIJ9TnpPLFcMookFCrsjLU
"""

#import os, time
#import glob
#path_to_watch = "/content/test"
#before = dict ([(f, None) for f in os.listdir (path_to_watch)])
#while 1:
#  time.sleep (5)
#  list = os.listdir(path_to_watch) # dir is your directory path
#  number_files = len(list)
#  print(number_files)
#  if number_files > 0:
#    print("there are more than 0 files")
#    for file in os.scandir(path_to_watch):
#      os.remove(file.path)

z = bool("False")
print(z)

#imoprts 

import numpy as np
import cv2
import matplotlib.pyplot as plt
from PIL import Image, ImageDraw, ImageFilter 
import os
import shutil
from google.colab import drive
import glob
from random import randrange
from google.colab import files
from google.colab.patches import cv2_imshow
import cv2
import numpy as np

drive.mount('/content/drive')

os.makedirs("Boards", exist_ok=True)
os.makedirs("Icons", exist_ok=True)
os.makedirs("Icons2", exist_ok=True)

os.makedirs("Output", exist_ok=True)
os.makedirs("testfolder", exist_ok=True)

BoardFolder = "/content/Boards"
IconFodler = "/content/Icons"
Icon2Fodler = "/content/Icons2"

Outputfolder = "/content/Output"
testFolder = "/content/testfolder"

Icon_size = 45

source_folder = r"/content/drive/MyDrive/tft_ai/tft_icons"
dest_folder = r"/content/Icons"

src_dir = source_folder
 
# path to destination directory
dest_dir = dest_folder
 
# getting all the files in the source directory
files = os.listdir(src_dir)
 
try:
    #if path already exists, remove it before copying with copytree()
    if os.path.exists(dest_dir):
        shutil.rmtree(dest_dir)
        shutil.copytree(src_dir, dest_dir)
except OSError as e:
    # If the error was caused because the source wasn't a directory
    if e.errno == errno.ENOTDIR:
       shutil.copy(src_dir, dest_dir)
    else:
        print('Directory not copied. Error: %s' % e)

source_folder = r"/content/drive/MyDrive/tft_ai/tft_icons2"
dest_folder = r"/content/Icons2"

src_dir = source_folder
 
# path to destination directory
dest_dir = dest_folder
 
# getting all the files in the source directory
files = os.listdir(src_dir)
 
try:
    #if path already exists, remove it before copying with copytree()
    if os.path.exists(dest_dir):
        shutil.rmtree(dest_dir)
        shutil.copytree(src_dir, dest_dir)
except OSError as e:
    # If the error was caused because the source wasn't a directory
    if e.errno == errno.ENOTDIR:
       shutil.copy(src_dir, dest_dir)
    else:
        print('Directory not copied. Error: %s' % e)

source_folder = r"/content/drive/MyDrive/tft_ai/tft_boards"
dest_folder = r"/content/Boards"

src_dir = source_folder
 
# path to destination directory
dest_dir = dest_folder
 
# getting all the files in the source directory
files = os.listdir(src_dir)
 
try:
    #if path already exists, remove it before copying with copytree()
    if os.path.exists(dest_dir):
        shutil.rmtree(dest_dir)
        shutil.copytree(src_dir, dest_dir)
except OSError as e:
    # If the error was caused because the source wasn't a directory
    if e.errno == errno.ENOTDIR:
       shutil.copy(src_dir, dest_dir)
    else:
        print('Directory not copied. Error: %s' % e)

source_folder = r"/content/drive/MyDrive/tft_ai/test_pics"
dest_folder = r"/content/testfolder"

src_dir = source_folder
 
# path to destination directory
dest_dir = dest_folder
 
# getting all the files in the source directory
files = os.listdir(src_dir)
 
try:
    #if path already exists, remove it before copying with copytree()
    if os.path.exists(dest_dir):
        shutil.rmtree(dest_dir)
        shutil.copytree(src_dir, dest_dir)
except OSError as e:
    # If the error was caused because the source wasn't a directory
    if e.errno == errno.ENOTDIR:
       shutil.copy(src_dir, dest_dir)
    else:
        print('Directory not copied. Error: %s' % e)

A_New_Challenger = ["Gain a Challenger Emblem"]
Academy_Heart = ["Your team counts as having 1 additional Academic."]
Academy_Honors = ["Gain an Academy Emblem."]
Academy_Soul = ["Your team counts as having 2 additional Academics."]
All_For_One = ["When an ally dies, they grant the Tyrant 25% of their maximum Health."]
Ancient_Archives = ["Gain 1 Tome of Traits."]
Arcane_Sigil = ["Gain an Arcanist Emblem."]
Arcanist_Heart = ["Your team counts as having 1 additional Arcanist."]
Arcanist_Soul = ["Your team counts as having 2 additional Arcanists."]
Ardent_Censer = ["Allies healed or shielded by Enchanters gain 15% stacking Attack Speed for the rest of combat (maximum once every 2 seconds)."]
Armor_Plating = ["Colossus become invulnerable for 2 seconds the first time their Health drops to 60% and 30%."]
Ascension = ["After 15 seconds of combat, your units deal 100% more damage."]
Assassin_Heart = ["Your team counts as having 1 additional Assassin."]
Assassin_Soul = ["Your team counts as having 2 additional Assassins."]
Band_of_Thieves = ["Gain 2 Thiefs Gloves."]
Beef_Up = ["Gain an Bruiser Emblem."]
Binary_Airdrop = ["Your units equipped with 2 items temporarily gain a random completed item at the start of combat."]
Bodyguard_Heart = ["Your team counts as having 1 additional Bodyguard."]
Bodyguard_Soul = ["Your team counts as having 2 additional Bodyguards."]
Broken_Stopwatch = ["8 seconds into combat, all enemies and non-Clockwork units are frozen in time for 4 seconds."]
Bruiser_Heart = ["Your team counts as having 1 additional Bruiser."]
Bruiser_Soul = ["Your team counts as having 2 additional Bruisers."]
Built_Different_1 = ["Your units with no Traits active gain 200 Health and 30% Attack Speed."]
Built_Different_2 = ["Your units with no Traits active gain 300 Health and 45% Attack Speed."]
Built_Different_3 = ["Your units with no Traits active gain 400 Health and 60% Attack Speed."]
Bulwark = ["Gain a Protector Emblem."]
Calculated_Loss = ["After losing your combat, gain 2 gold and a free Shop refresh."]
Celestial_Blessing_1 = ["Your units heal for 10% of the damage dealt by attacks and abilities. Excess healing is converted to a shield up to 300 Health."]
Celestial_Blessing_2 = ["Your units heal for 15% of the damage dealt by attacks and abilities. Excess healing is converted to a shield up to 450 Health."]
Celestial_Blessing_3 = ["Your units heal for 20% of the damage dealt by attacks and abilities. Excess healing is converted to a shield up to 600 Health."]
Challenger_Heart = ["Your team counts as having 1 additional Challenger."]
Challenger_Soul = ["Your team counts as having 2 additional Challengers."]
Chemical_Overload_1 = ["Chemtechs explode on death, dealing 50% of their maximum Health as magic damage to enemies within 2 hexes."]
Chemical_Overload_2 = ["Chemtechs explode on death, dealing 75% of their maximum Health as magic damage to enemies within 2 hexes."]
Chemical_Overload_3 = ["Chemtechs explode on death, dealing 100% of their maximum health as magic damage to enemies within 2 hexes."]
Chemtech_Heart = ["Your team counts as having 1 additional Chemtech."]
Chemtech_Soul = ["Your team counts as having 2 additional Chemtechs."]
Clear_Mind = ["If you have no units on your bench at the end of a round, gain 4 experience points."]
Clockwork_Heart = ["Your team counts as having 1 additional Clockwork."]
Clockwork_Soul = ["Your team counts as having 2 additional Clockworks."]
Cram_Session = ["After casting their first Ability, Academics restore 80% of their maximum Mana."]
Cutthroat = ["Assassins Mana Reave the first unit they attack, increasing their maximum Mana by 65% until they cast."]
Cybernetic_Implants_1 = ["Your units equipped with an item gain 300 Health and 20 Attack Damage."]
Cybernetic_Implants_2 = ["Your units equipped with an item gain 450 Health and 30 Attack damage"]
Cybernetic_Implants_3 = ["Your units equipped with an item gain 600 Health and 40 Attack Damage"]
Deadeye = ["Gain a Sniper Emblem."]
Dominance = ["After winning your combat, gain 1 bonus gold for every 2 surviving units"]
Dual_Rule = ["There are now 2 Tyrants."]
Duet = ["Summon 1 additional Socialite Spotlight"]
Element_X = ["Gain a Chemtech Emblem."]
En_Garde = ["The first time an enemy is attacked by a Challenger, they are Disarmed for 4 seconds."]
Enchanter_Heart = ["Your team counts as having 1 additional Enchanter"]
Enchanter_Soul = ["Your team counts as having 2 additional Enchanters."]
Enforcer_Heart = ["Your team counts as having 1 additional Enforcer"]
Enforcer_Soul = ["Your team counts as having 2 additional Enforcers."]
Exiles_1 = ["Your units that start combat with no adajacent allies gain a 40% maximum Health shield for 8 seconds."]
Exiles_2 = ["Your units that start combat with no adajacent allies gain a 60% maximum Health shield for 8 seconds."]
Exiles_3 = ["Your units that start combat with no adajacent allies gain a 80% maximum Health shield for 8 seconds."]
Experiment_1337 = ["Gain a Mutant Emblem"]
Featherweights_1 = ["Your 1 and 2 cost units gain 40% movement  and Attack Speed"]
Featherweights_2 = ["Your 1 and 2 cost units gain 60% movement and Attack Speed."]
Featherweights_3 = ["Your 1 and 2 cost units gain 80% movement and Attack Speed"]
First_Aid_Kit = ["All healing and shielding received by your units is increased by 35%."]
Gold_Reserves = ["Mercenaries deal 1% more damage per 1 gold you have.(Maximum +60%)"]
Golden_Ticket = ["Each time your Shop is refreshed, you have a 35% chance to gain a free refresh."]
Hidden_Blade = ["Gain an Assassin Emblem."]
High_End_Shopping = ["Champions appear in your shop as if you were 1 level higher"]
High_Roller_ = ["Gain 2 Loaded Dice."]
Hired_Gun = ["Gain a Mercenary Emblem"]
Hyper_Roll = ["If you have less than 10 Gold at the end of a around, gain 3 gold."]
Imperial_Banner = ["Gain an Imperial Emblem"]
Imperial_Heart = ["Your team counts as having 1 additional Imperial."]
Imperial_Soul = ["Your team counts as having 2 additional Imperials."]
Innovator_Heart = ["Your team counts as having 1 additional Innovator"]
Innovator_Soul = ["Your team counts as having 2 additional Innovators."]
Instant_Injection = ["Chemtechs now additionally trigger their bonuses at the start of combat."]
Item_Grab_Bag_1 = ["Gain 1 random completed item and 1 Reforger."]
Item_Grab_Bag_2 = ["Gain 2 random completed items and 2 Reforgers."]
Junkyard = ["Every 3 combat rounds with the Scrap Trait active, gain a random component."]
Knifes_Edge_1 = ["Your units that start combat in the front 2 rows gain 30 Attack Damage."]
Knifes_Edge_2 = ["Your units that start combat in the first 2 rows gain 45 Attack Damage."]
Knifes_Edge_3 = ["Your units that start combat in the first 2 rows gain 60 Attack Damage."]
Level_Up = ["When you buy experience points, gain an additional 4 experience points. You can now reach level 10."]
Lifelong_Learning = ["Scholars that survive combat permanently gain 3 Ability Power."]
Makeshift_Armor_1 = ["Your units with no items gain 30 Armor and Magic Resist."]
Makeshift_Armor_2 = ["Your units with no items gain 45 Armor and Magic Resist."]
Makeshift_Armor_3 = ["Your units with no items gain 60 Armor and Magic Resist."]
March_of_Progress = ["Gain 4 bonus experience points per round. You can no longer use gold to gain experience points."]
Mercenary_Heart = ["Your team counts as having 1 additional Mercenary"]
Mercenary_Soul = ["Your team counts as having 2 additional Mercenaries."]
Metabolic_Accelerator = ["Your Tactician moves faster and heals 2 Health at the start of each round."]
Metal_Detector = ["Gain a Scrap Emblem"]
Mutant_Heart = ["Your team counts as having 1 additional Mutant"]
Mutant_Soul = ["Your team counts as having 2 additional Mutants."]
New_Recruit = ["Gain +1 team size"]
One_For_All = ["When your Syndicates die, they grant your other Syndicates 20 Attack Damage and Ability Power."]
Pandoras_Items = ["Gain a random component. At the start of each turn, items on your bench are randominzed (excluding Force of Nature, Spatula, and consumables)."]
Payday = ["After winning your combat, gain 1 bonus gold for each surviving Syndicate."]
Phony_Frontline = ["Gain 2 Target Dummies."]
Pirates = ["Mercenary units have a 50% chance to drop 1 gold when they kill an enemy."]
Portable_Forge = ["Open an Armory and choose 1 of 3 unique Artifacts crafted by Ornn."]
Protector_Heart = ["Your team counts as having 1 additional Protector"]
Protector_Soul = ["Your team counts as having 2 additional Protectors."]
Rich_Get_Richer = ["Gain 10 gold. Your maximum interest is increased to 7."]
Runic_Shield_1 = ["Arcanists start combat with a shield equal to 400% of their Ability Power."]
Runic_Shield_2 = ["Arcanists start combat with a shield equal to 600% of their Ability Power."]
Runic_Shield_3 = ["Arcanists start combat with a shield equal to 800% of their Ability Power."]
Safety_Vest = ["Gain a Bodyguard Emblem"]
Salvage_Bin = ["Gain a random completed item. Selling champions breaks apart their full items into components (excluding Force of Nature)."]
Scholar_Heart = ["Your team counts as having 1 additional Scholar"]
Scholar_Soul = ["Your team counts as having 2 additional Scholars."]
Scoped_Weapons = ["Double the hex range of your ranged units, and their attacks cannot miss."]
Scrap_Heart = ["Your team counts as having 1 additional Scrap"]
Scrap_Soul = ["Your team counts as having 2 additional Scraps."]
SelfRepair = ["When the Innovation dies, it will become untargetable and repair itself if an Innovator is still alive."]
Shady_Business = ["Gain a Syndicate Emblem"]
Share_the_Spotlight = ["Allies adjacent to a spotlight at the start of combat gain 50% of its bonuses."]
Sharpshooter = ["Twinshots ranged attacks and abilities can bounce once dealing 20% less damage."]
Shrug_It_Off = ["Bruisers regenerate 2% of their maximum Health each second."]
Smoke_Bomb = ["The first time Assassins drop below 60% Health, they briefly enter stealth, becoming untargetable and shedding all negative effects."]
Snipers_Nest = ["Your team counts as having 1 additional Sniper"]
Sniper_Heart = ["Snipers gain +8% damage per round they've started combat in the same hex. (Maximum +40%)."]
Sniper_Soul = ["Your team counts as having 2 additional Snipers."]
So_Small = ["Yordles gain 35% Dodge Chance."]
Socialite_Heart = ["Your team counts as having 1 additional Socialite"]
Socialite_Soul = ["Your team counts as having 2 additional Socialites."]
Spell_Blade = ["Arcanists attacks deal bonus magic damage equal to 30% Ability Power on hit."]
Stand_Behind_Me = ["At the start of combat, Bodyguards grant 100% of their Armor bonus to non-Bodyguard allies directly behind them (does not stack)."]
Stand_United_1 = ["Your units gain 3 Attack Damage and Ability Power per Trait active across your team."]
Stand_United_2 = ["Your units gain 4 Attack Damage and Ability Power per Trait active across your team."]
Stand_United_3 = ["Your units gain 6 Attack Damage and Ability Power per Trait active across your team."]
Sunfire_Board = ["At the start of combat, burn all enemies for 40% of their maximum HP over 16 seconds and reduce healing received by 50%."]
Syndicate_Heart = ["Your team counts as having 1 additional Syndicate"]
Syndicate_Soul = ["Your team counts as having 2 additional Syndicates."]
Thrill_of_the_Hunt_1 = ["Your units heal 300 Health on kill."]
Thrill_of_the_Hunt_2 = ["Your units heal 450 Health on kill."]
Thrill_of_the_Hunt_3 = ["Your units heal 600 Health on kill."]
Tick_Tock = ["Gain a Clockwork Emblem."]
Tinker = ["Every 1 combat round(s) with Scrap active, gain a Magnetic Remover or Reforger."]
Titanic_Force = ["Your units with more than 1200 maximum Health gain Attack Damage equal to 4% of their maximum HEalth."]
Trade_Sector = ["Gain a free Shop refresh each round."]
Twinshot_Heart = ["Your team counts as having 1 additional Twinshot"]
Twinshot_Soul = ["Your team counts as having 2 additional Twinshots."]
Underdogs = ["Whenever your team has fewer units alive than your opponent, your unit regenerate 15% of their missing Health every second."]
Unstable_Evolution = ["Mutants randomly gain one of the following when they reach 2 star: 500 Health, 35% Attack Speed, 35 Attack Damage, or 35 Ability Power. These bonuses stack."]
Valedictorian = ["Gain a Scholar Emblem."]
Weakspot = ["Your units attacks ignore 25% of the targets Armor and reduce healing received by 50% for 10 seconds"]
Windfall = ["Gain gold based on the number of Augments you currently have. 0 = 20g / 1 = 25g / 2 = 30g"]
Wise_Spending = ["Gain 1 experience Point when you refresh your Shop."]
Woodland_Charm = ["At the start of combat, your highest Health Champion creates 1500 Health copy of themself (excluding items)."]

IconDict = {
"ANewChallenger" : "Gain a Challenger Emblem",
"AcademyHeart" : "Your team counts as having 1 additional Academic.",
"AcademyHonors" : "Gain an Academy Emblem.",
"AcademySoul" : "Your team counts as having 2 additional Academics.",
"AllForOne" : "When an ally dies, they grant the Tyrant 25% of their maximum Health.",
"AncientArchives" : "Gain 1 Tome of Traits.",
"ArcaneSigil" : "Gain an Arcanist Emblem.",
"ArcanistHeart" : "Your team counts as having 1 additional Arcanist.",
"ArcanistSoul" : "Your team counts as having 2 additional Arcanists.",
"ArdentCenser" : "Allies healed or shielded by Enchanters gain 15% stacking Attack Speed for the rest of combat (maximum once every 2 seconds).",
"ArmorPlating" : "Colossus become invulnerable for 2 seconds the first time their Health drops to 60% and 30%.",
"Ascension" : "After 15 seconds of combat, your units deal 100% more damage.",
"AssassinHeart" : "Your team counts as having 1 additional Assassin.",
"AssassinSoul" : "Your team counts as having 2 additional Assassins.",
"BandofThieves" : "Gain 2 Thiefs Gloves.",
"BeefUp" : "Gain an Bruiser Emblem.",
"BinaryAirdrop" : "Your units equipped with 2 items temporarily gain a random completed item at the start of combat.",
"BodyguardHeart" : "Your team counts as having 1 additional Bodyguard.",
"BodyguardSoul" : "Your team counts as having 2 additional Bodyguards.",
"BrokenStopwatch" : "8 seconds into combat, all enemies and non-Clockwork units are frozen in time for 4 seconds.",
"BruiserHeart" : "Your team counts as having 1 additional Bruiser.",
"BruiserSoul" : "Your team counts as having 2 additional Bruisers.",
"BuiltDifferent1" : "Your units with no Traits active gain 200 Health and 30% Attack Speed.",
"BuiltDifferent2" : "Your units with no Traits active gain 300 Health and 45% Attack Speed.",
"BuiltDifferent3" : "Your units with no Traits active gain 400 Health and 60% Attack Speed.",
"Bulwark" : "Gain a Protector Emblem.",
"CalculatedLoss" : "After losing your combat, gain 2 gold and a free Shop refresh.",
"CelestialBlessing1" : "Your units heal for 10% of the damage dealt by attacks and abilities. Excess healing is converted to a shield up to 300 Health.",
"CelestialBlessing2" : "Your units heal for 15% of the damage dealt by attacks and abilities. Excess healing is converted to a shield up to 450 Health.",
"CelestialBlessing3" : "Your units heal for 20% of the damage dealt by attacks and abilities. Excess healing is converted to a shield up to 600 Health.",
"ChallengerHeart" : "Your team counts as having 1 additional Challenger.",
"ChallengerSoul" : "Your team counts as having 2 additional Challengers.",
"ChemicalOverload1" : "Chemtechs explode on death, dealing 50% of their maximum Health as magic damage to enemies within 2 hexes.",
"ChemicalOverload2" : "Chemtechs explode on death, dealing 75% of their maximum Health as magic damage to enemies within 2 hexes.",
"ChemicalOverload3" : "Chemtechs explode on death, dealing 100% of their maximum health as magic damage to enemies within 2 hexes.",
"ChemtechHeart" : "Your team counts as having 1 additional Chemtech.",
"ChemtechSoul" : "Your team counts as having 2 additional Chemtechs.",
"ClearMind" : "If you have no units on your bench at the end of a round, gain 4 experience points.",
"ClockworkHeart" : "Your team counts as having 1 additional Clockwork.",
"ClockworkSoul" : "Your team counts as having 2 additional Clockworks.",
"CramSession" : "After casting their first Ability, Academics restore 80% of their maximum Mana.",
"Cutthroat" : "Assassins Mana Reave the first unit they attack, increasing their maximum Mana by 65% until they cast.",
"CyberneticImplants1" : "Your units equipped with an item gain 300 Health and 20 Attack Damage.",
"CyberneticImplants2" : "Your units equipped with an item gain 450 Health and 30 Attack damage",
"CyberneticImplants3" : "Your units equipped with an item gain 600 Health and 40 Attack Damage",
"Deadeye" : "Gain a Sniper Emblem.",
"Dominance" : "After winning your combat, gain 1 bonus gold for every 2 surviving units",
"DualRule" : "There are now 2 Tyrants.",
"Duet" : "Summon 1 additional Socialite Spotlight",
"ElementX" : "Gain a Chemtech Emblem.",
"EnGarde" : "The first time an enemy is attacked by a Challenger, they are Disarmed for 4 seconds.",
"EnchanterHeart" : "Your team counts as having 1 additional Enchanter",
"EnchanterSoul" : "Your team counts as having 2 additional Enchanters.",
"EnforcerHeart" : "Your team counts as having 1 additional Enforcer",
"EnforcerSoul" : "Your team counts as having 2 additional Enforcers.",
"Exiles1" : "Your units that start combat with no adajacent allies gain a 40% maximum Health shield for 8 seconds.",
"Exiles2" : "Your units that start combat with no adajacent allies gain a 60% maximum Health shield for 8 seconds.",
"Exiles3" : "Your units that start combat with no adajacent allies gain a 80% maximum Health shield for 8 seconds.",
"Experiment1337" : "Gain a Mutant Emblem",
"Featherweights1" : "Your 1 and 2 cost units gain 40% movement  and Attack Speed",
"Featherweights2" : "Your 1 and 2 cost units gain 60% movement and Attack Speed.",
"Featherweights3" : "Your 1 and 2 cost units gain 80% movement and Attack Speed",
"FirstAidKit" : "All healing and shielding received by your units is increased by 35%.",
"GoldReserves" : "Mercenaries deal 1% more damage per 1 gold you have.(Maximum +60%)",
"GoldenTicket" : "Each time your Shop is refreshed, you have a 35% chance to gain a free refresh.",
"HiddenBlade" : "Gain an Assassin Emblem.",
"HighEndShopping" : "Champions appear in your shop as if you were 1 level higher",
"HighRoller" : "Gain 2 Loaded Dice.",
"HiredGun" : "Gain a Mercenary Emblem",
"HyperRoll" : "If you have less than 10 Gold at the end of a around, gain 3 gold.",
"ImperialBanner" : "Gain an Imperial Emblem",
"ImperialHeart" : "Your team counts as having 1 additional Imperial.",
"ImperialSoul" : "Your team counts as having 2 additional Imperials.",
"InnovatorHeart" : "Your team counts as having 1 additional Innovator",
"InnovatorSoul" : "Your team counts as having 2 additional Innovators.",
"InstantInjection" : "Chemtechs now additionally trigger their bonuses at the start of combat.",
"ItemGrabBag1" : "Gain 1 random completed item and 1 Reforger.",
"ItemGrabBag2" : "Gain 2 random completed items and 2 Reforgers.",
"Junkyard" : "Every 3 combat rounds with the Scrap Trait active, gain a random component.",
"KnifesEdge1" : "Your units that start combat in the front 2 rows gain 30 Attack Damage.",
"KnifesEdge2" : "Your units that start combat in the first 2 rows gain 45 Attack Damage.",
"KnifesEdge3" : "Your units that start combat in the first 2 rows gain 60 Attack Damage.",
"LevelUp" : "When you buy experience points, gain an additional 4 experience points. You can now reach level 10.",
"LifelongLearning" : "Scholars that survive combat permanently gain 3 Ability Power.",
"MakeshiftArmor1" : "Your units with no items gain 30 Armor and Magic Resist.",
"MakeshiftArmor2" : "Your units with no items gain 45 Armor and Magic Resist.",
"MakeshiftArmor3" : "Your units with no items gain 60 Armor and Magic Resist.",
"MarchofProgress" : "Gain 4 bonus experience points per round. You can no longer use gold to gain experience points.",
"MercenaryHeart" : "Your team counts as having 1 additional Mercenary",
"MercenarySoul" : "Your team counts as having 2 additional Mercenaries.",
"MetabolicAccelerator" : "Your Tactician moves faster and heals 2 Health at the start of each round.",
"MetalDetector" : "Gain a Scrap Emblem",
"MutantHeart" : "Your team counts as having 1 additional Mutant",
"MutantSoul" : "Your team counts as having 2 additional Mutants.",
"NewRecruit" : "Gain +1 team size",
"OneForAll" : "When your Syndicates die, they grant your other Syndicates 20 Attack Damage and Ability Power.",
"PandorasItems" : "Gain a random component. At the start of each turn, items on your bench are randominzed (excluding Force of Nature, Spatula, and consumables).",
"Payday" : "After winning your combat, gain 1 bonus gold for each surviving Syndicate.",
"PhonyFrontline" : "Gain 2 Target Dummies.",
"Pirates" : "Mercenary units have a 50% chance to drop 1 gold when they kill an enemy.",
"PortableForge" : "Open an Armory and choose 1 of 3 unique Artifacts crafted by Ornn.",
"ProtectorHeart" : "Your team counts as having 1 additional Protector",
"ProtectorSoul" : "Your team counts as having 2 additional Protectors.",
"RichGetRicher" : "Gain 10 gold. Your maximum interest is increased to 7.",
"RunicShield1" : "Arcanists start combat with a shield equal to 400% of their Ability Power.",
"RunicShield2" : "Arcanists start combat with a shield equal to 600% of their Ability Power.",
"RunicShield3" : "Arcanists start combat with a shield equal to 800% of their Ability Power.",
"SafetyVest" : "Gain a Bodyguard Emblem",
"SalvageBin" : "Gain a random completed item. Selling champions breaks apart their full items into components (excluding Force of Nature).",
"ScholarHeart" : "Your team counts as having 1 additional Scholar",
"ScholarSoul" : "Your team counts as having 2 additional Scholars.",
"ScopedWeapons" : "Double the hex range of your ranged units, and their attacks cannot miss.",
"ScrapHeart" : "Your team counts as having 1 additional Scrap",
"ScrapSoul" : "Your team counts as having 2 additional Scraps.",
"SelfRepair" : "When the Innovation dies, it will become untargetable and repair itself if an Innovator is still alive.",
"ShadyBusiness" : "Gain a Syndicate Emblem",
"SharetheSpotlight" : "Allies adjacent to a spotlight at the start of combat gain 50% of its bonuses.",
"Sharpshooter" : "Twinshots ranged attacks and abilities can bounce once dealing 20% less damage.",
"ShrugItOff" : "Bruisers regenerate 2% of their maximum Health each second.",
"SmokeBomb" : "The first time Assassins drop below 60% Health, they briefly enter stealth, becoming untargetable and shedding all negative effects.",
"SnipersNest" : "Your team counts as having 1 additional Sniper",
"SniperHeart" : "Snipers gain +8% damage per round they've started combat in the same hex. (Maximum +40%).",
"SniperSoul" : "Your team counts as having 2 additional Snipers.",
"SoSmall" : "Yordles gain 35% Dodge Chance.",
"SocialiteHeart" : "Your team counts as having 1 additional Socialite",
"SocialiteSoul" : "Your team counts as having 2 additional Socialites.",
"SpellBlade" : "Arcanists attacks deal bonus magic damage equal to 30% Ability Power on hit.",
"StandBehindMe" : "At the start of combat, Bodyguards grant 100% of their Armor bonus to non-Bodyguard allies directly behind them (does not stack).",
"StandUnited1" : "Your units gain 3 Attack Damage and Ability Power per Trait active across your team.",
"StandUnited2" : "Your units gain 4 Attack Damage and Ability Power per Trait active across your team.",
"StandUnited3" : "Your units gain 6 Attack Damage and Ability Power per Trait active across your team.",
"SunfireBoard" : "At the start of combat, burn all enemies for 40% of their maximum HP over 16 seconds and reduce healing received by 50%.",
"SyndicateHeart" : "Your team counts as having 1 additional Syndicate",
"SyndicateSoul" : "Your team counts as having 2 additional Syndicates.",
"ThrilloftheHunt1" : "Your units heal 300 Health on kill.",
"ThrilloftheHunt2" : "Your units heal 450 Health on kill.",
"ThrilloftheHunt3" : "Your units heal 600 Health on kill.",
"TickTock" : "Gain a Clockwork Emblem.",
"Tinker" : "Every 1 combat round(s) with Scrap active, gain a Magnetic Remover or Reforger.",
"TitanicForce" : "Your units with more than 1200 maximum Health gain Attack Damage equal to 4% of their maximum HEalth.",
"TradeSector" : "Gain a free Shop refresh each round.",
"TwinshotHeart" : "Your team counts as having 1 additional Twinshot",
"TwinshotSoul" : "Your team counts as having 2 additional Twinshots.",
"Underdogs" : "Whenever your team has fewer units alive than your opponent, your unit regenerate 15% of their missing Health every second.",
"UnstableEvolution" : "Mutants randomly gain one of the following when they reach 2 star: 500 Health, 35% Attack Speed, 35 Attack Damage, or 35 Ability Power. These bonuses stack.",
"Valedictorian" : "Gain a Scholar Emblem.",
"Weakspot" : "Your units attacks ignore 25% of the targets Armor and reduce healing received by 50% for 10 seconds",
"Windfall" : "Gain gold based on the number of Augments you currently have. 0  20g / 1 25g / 2 30g",
"WiseSpending" : "Gain 1 experience Point when you refresh your Shop.",
"WoodlandCharm" : "At the start of combat, your highest Health Champion creates 1500 Health copy of themself (excluding items)."

}

im = Image.open("/content/Icons/AcademySoul.png")
display(im)
im.size  # (364, 471)
im.getbbox()  # (64, 89, 278, 267)
im2 = im.crop(im.getbbox())
im2.size  # (214, 178)
display(im2)

from PIL import Image, ImageDraw, ImageFilter
from google.colab.patches import cv2_imshow


im1 = Image.open('/content/Icons/ArcanistHeart.png')
bg = Image.new('RGB', ((im1.size)), color = (33,28,36)) 


bg.paste(im1, (0, 0), im1)

left = 40
top = 30
right = 220
bottom = 220

bg = bg.crop((left, top, right, bottom))
display(bg)

outputf = "/content/Output"
for filename in os.listdir("/content/Icons"):
  im1 = Image.open(f'/content/Icons/{filename}')
  bg = Image.new('RGB', ((im1.size)), color = (33,28,36)) 
  bg.paste(im1, (0, 0), im1)

  left = 40
  top = 30
  right = 220
  bottom = 220

  bg = bg.crop((left, top, right, bottom))
  bg.save(f"/content/Output/{filename}")

  display(bg)

outputf = "/content/Output"
for filename in os.listdir("/content/icon2"):
  im1 = Image.open(f'/content/icon2/{filename}')

  im1.save(f"/content/Output/{filename}")

  display(bg)

# Python program to illustrate
# template matching

from PIL import Image, ImageDraw, ImageFilter
from google.colab.patches import cv2_imshow
import numpy as np

IconsFound = []

# Read the main image
img_rgb = cv2.imread('/content/perforamncetest/20.PNG')
img_rgb = cv2.resize(img_rgb, (1920,1080), interpolation = cv2.INTER_AREA)



left = 410
top = 205
right = 625
bottom = 480

img_crop = img_rgb[180:425, 290:590]



# Convert it to grayscale
img_gray = cv2.cvtColor(img_crop, cv2.COLOR_BGR2GRAY)

# Read the template
rezied_icons = []
icon_names = []
for filename in os.listdir("/content/Icons2"):
  iconImage = cv2.imread(f"/content/Icons2/{filename}",0)
  iconImage = cv2.resize(iconImage, (33,33), interpolation = cv2.INTER_AREA)
  rezied_icons.append(iconImage)
  icon_names.append(filename)

print(len(rezied_icons))
print(len(icon_names))

i = 0
for template in rezied_icons:
   
   w, h = template.shape[::-1]

   # Perform match operations.
   res = cv2.matchTemplate(img_gray,template,cv2.TM_CCOEFF_NORMED)

   # Specify a threshold
   threshold = 0.8


   # Store the coordinates of matched area in a numpy array
   loc = np.where( res >= threshold)

   # Draw a rectangle around the matched region.
   for pt in zip(*loc[::-1]):
     cv2.rectangle(img_crop, pt, (pt[0] + w, pt[1] + h), (0,255,255), 2)
     IconsFound.append(icon_names[i])
     print(icon_names[i])
   i += 1


Ficon1 = ""
Ficon2 = ""
Ficon3 = ""
Ficon4 = ""
Ficon5 = ""
Ficon6 = ""

Faugmentname1 = ""
Faugmentname2 = ""
Faugmentname3 = ""
Faugmentname4 = ""
Faugmentname5 = ""
Faugmentname6 = ""

Fdescription1 =""
Fdescription2 =""
Fdescription3 =""
Fdescription4 =""
Fdescription5 =""
Fdescription6 =""

 
# Show the final image with the matched area.
myset = set(IconsFound)
myset = {x.replace('.png', '') for x in myset}


s = list(myset)

if len(s) > 1:
  Ficon1 = "{}.png".format(s[0])
  Faugmentname1 = s[0]
  Fdescription1 = IconDict[s[0]]


if len(s) > 2:
  Ficon2 = "{}.png".format(s[1])
  Faugmentname2 =  s[1]
  Fdescription2 = IconDict[s[1]]

if len(s) > 3:
  Ficon3=  "{}.png".format(s[2])
  Faugmentname3 = s[2]
  Fdescription3 = IconDict[s[2]]

if len(s) > 4:
  Ficon4 = "{}.png".format(s[3])
  Faugmentname4 = s[3]
  Fdescription4 = IconDict[s[3]]

if len(s) > 5:
  Ficon5 = "{}.png".format(s[4])
  Faugmentname5 = s[4]
  Fdescription5 = IconDict[s[4]]

if len(s) > 6:
  Ficon6 = "{}.png".format(s[5])
  Faugmentname6 =s[5]
  Fdescription6  =IconDict[s[5]]



#print(Ficon1)
#print(Faugmentname1)
#print(Fdescription1)
#
#
#print(Ficon2)
#print(Faugmentname2)
#print(Fdescription2)
#
#
#print(Ficon3)
#print(Faugmentname3)
#print(Fdescription3)
#
#
#print(Ficon4)
#print(Faugmentname4)
#print(Fdescription4)
#
#
#print(Ficon5)
#print(Faugmentname5)
#print(Fdescription5)
#
#
#print(Ficon6)
#print(Faugmentname6)
#print(Fdescription6)




#for elm in myset:
#  if elm in IconDict:
#    print(elm)
#    print(IconDict[elm])
#    print("\n")
cv2_imshow(img_rgb)

All_icons = []
for filename in os.listdir(IconFodler):    
    All_icons.append(filename)
len(All_icons)

Ficon1 = "w"
Ficon2 = "f"
Ficon3 = ""
Ficon4 = "we"
Ficon5 = "ret"
Ficon6 = "ert"

Faugmentname1 = "4353"
Faugmentname2 = "rte"
Faugmentname3 = "ret"
Faugmentname4 = "hgf"
Faugmentname5 = "hgf"
Faugmentname6 = "dfgh"

Fdescription1 ="rt"
Fdescription2 ="rt"
Fdescription3 ="y"
Fdescription4 ="swgsdg"
Fdescription5 ="45y"
Fdescription6 ="45y"    
data = """
{{  
"icon1" : "{}",
"icon2" : "{}",
"icon3" : "{}",
"icon4" : "{}",
"icon5" : "{}",
"icon6" : "{}",

"augmentname1" : "{}",
"augmentname2" : "{}",
"augmentname3" : "{}",
"augmentname4" : "{}",
"augmentname5" : "{}",
"augmentname6" : "{}",

"description1" :"{}",
"description2" :"{}",
"description3" :"{}",
"description4" :"{}",
"description5" :"{}",
"description6" :"{}"
}}
""".format(Ficon1,Ficon2,Ficon3,Ficon4,Ficon5,Ficon6,Faugmentname1,Faugmentname2,Faugmentname3,Faugmentname4,Faugmentname5,Faugmentname6,Fdescription1,Fdescription2,Fdescription3,Fdescription4,Fdescription5,Fdescription6)

print(data)

#dir = '/content/Output/'
#shutil.rmtree(dir)
#os.makedirs("Output", exist_ok=True)

#!zip -r /content/file.zip /content/Output
#files.download("/content/file.zip")